# Example appinst data file, note that this is Python code

# Purpose of this file:
# =====================
#
# To be able to install an application using all the functionality
# that appinst provides in a single file.  For example you can install all
# an application using the code:
#
#    import appinst
#    appinst.install_from_dat("ipython.dat")
#
# However you are not required to use this file, you can also call the
# various functions appinst provides yourself, having to write a lot more
# code.


# Variables to define:
# ====================
#
# The variable SHORTCUTS is required (without this variable the file would
# serve no purpose), and the variable MENUS is optional, see below.



# SHORTCUTS is what defined the shortcuts to the application(s), that is:
#   * On Windows: start menu items, quicklaunch items, desktop icons
#   * On OSX: The application folder in the /Applications directory
#
# cmd: (required)
#     The command line arguments of the start the application.
#
# comment: (optional)
#     On Windows, this is what you see in a yellow box when hovering
#     over the menu item.
#
# icon: (optional)
#     A Windows .ico file
#
# incs: (optional)
#     An OSX .incs file, default to 'PythonInterpreter.incs' (Python rocket)
#
# id: (required)
#     A menu id, this is used for locating the menu item
#
# name: (required)
#     The name of the application as displayed in the menu
#
# terminal: (required, boolean)
#     whether or not the application starts a terminal (like ipython does)
#
# quicklaunch: (optional, boolean)
#     On Windows:
#         whether or not, a quicklaunch item is installed.  Defaults to what
#         is specified in custom_tools\Property.dat by ADDTOLAUNCHER, if the
#         file exists at all.  When Property.dat does not exist, the default
#         is True.
#
# desktop: (optional, boolean)
#     whether or not, a desktop icon should be install.
#     On Windows this defaults is given in custom_tools\Property.dat by
#     ADDTODESKTOP variable, if the file exists at all.  When Property.dat
#     does not exist, the default is True.
#
# pkg-root: (optional, integer, default 2)
#     Since this file it likely to be called (using appinst.install_from_dat)
#     from with a distribution package (such as en egg), it is useful to
#     specify the location of icon (and other data files) relative to the
#     root of the root of the package distribution file tree. pkg-root tells
#     appinst how many directories above the location of this file the root
#     of the package is located.  For example, when this file is called
#     EGG-INFO/app/appinst.dat you need to go 2 directories up to reach the
#     root of the distribution package. 'pkg-root': 0, would mean that this
#     file is in the root of that package itself, as in the example below.
#     However, you can also specify 'pkg-root': None.  In this case the all
#     path are absolute.

SHORTCUTS = [
    { # IPython
        'cmd': ['ipython', '-pylab'],
        'comment': 'Pylab in an iPython shell',
        'icon': 'EGG-INFO/app/pycon.ico',
        'id': 'pylab',
        'name': 'PyLab (IPython)',
        'terminal': True,
	'quicklaunch': False,
	'desktop': True,
	'pkg-root': 0,
    },
]



# MENUS is an optional variable which specifies the menus to install the
# application into.  The example below is what MENUS defaults to in a
# an EPD installed Python.  This default is obtained from the of values NAME
# and FULL_VERSION exposed in custom_tools.
#
# parent: (optional, defaults to None)
#     Where to place the menu shortcuts defined above, that is specifying
#     the parent of the menu to install.  Possible values are:
#
#        'ROOT'  :     root of the menu tree structure
#
#         None   :     The leaf nodes of the menu (sub-menus).
#
#         id     :     an id string specifying the node.  In the example
#                      (since the parent is the leaf node) we could also
#                      have specified:
#                         'parent': ['enthought.epd_py25-4.1.301']
#                      which is more to type, but since the default is None,
#                      we could have omitted the 'parent' key altogether.

MENUS = [
    { # Enthought Python Distribution 4.1.301 with Python 2.5
        'id': 'enthought',
        'name': 'Enthought',
        'sub-menus': [
            { 'id': 'epd_py25-4.1.301',
              'name': 'EPD_Py25-4.1.301' },
        ],
	'parent': None,
     },
]
